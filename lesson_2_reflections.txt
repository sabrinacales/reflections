What happens when you initialize a repository? Why do you need to do it?

=> Initializing a git repository tells git that this is a new repository. You need to do it so that git can create the repository. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

=> The staging area is a place where you can load files before you commit them to the repository. It allows you to select which files you want in your repository. 

How can you use the staging area to make sure you have one commit per logical change?

=> Add the changed file to the staging area as soon as you change it. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

=> Some instances where branches are helpful are testing out new features, trying different solutions to a problem... If you find you don't like the new changes you can go back to the master branch. 

How do the diagrams help you visualize the branch structure?

=> The diagrams show the commit and branch history. They also show reachability. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

=> Merging two branches together takes the commits performed on both branches and combines them into one branch. Branches are represented a split between the main project (master) and an offshoot (branch). When the branches are merged it is represented at the two branches coming back together. Once two (or more) branches have been merged, the history of both branches can now be seen when in the merged branch. 
